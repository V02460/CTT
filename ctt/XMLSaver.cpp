#include "XMLSaver.h"

namespace controller {
namespace project {

using ::exception::IOException;
using ::model::saveable::Saveable;

XMLSaver::XMLSaver() {
}

void XMLSaver::save(QDir path, const Project &project) {
	initDocument(path);
	mapBasePointer(project);
	writeBaseElements();
}

void XMLSaver::initDocument(QDir path) {
	QFile file(path.absolutePath());
	if (!file.open(QIODevice::WriteOnly)) {
		throw new IOException(QString("File ").append(path.absolutePath()).append(" could not be opened."));
	}
	out = new QXmlStreamWriter(&file);
	out->setAutoFormatting(true);
	out->writeStartDocument();
	out->writeComment(QString("Do not edit this file!"));
	out->writeStartElement(QString("elements"));
}

void XMLSaver::mapBasePointer(Project project) {
	pointerIdMap.insert(project.getBaseVideoList(), 1);
	pointerIdMap.insert(project.getVideoList1(), 2);
	pointerIdMap.insert(project.getVideoList2, 3);
	pointerIdMap.insert(project.getPlayerList1(), 4);
	pointerIdMap.insert(project.getPlayer2(), 5);
	pointerIdMap.insert(project.getDiffList(), 6);
	pointerIdMap.insert(project.getView(), 7);
}

void XMLSaver::writeBaseElements() {
	out->writeStartElement(QString("element"));
	// TODO hier weiter
}

}  // namespace project
}  // namespace controller